

================================================================
== Vivado HLS Report for 'adder'
================================================================
* Date:           Mon Sep 28 20:30:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        adder
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.00|     1.016|        0.38|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  130|  130|  130|  130|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  128|  128|         3|          2|          2|    64|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.65>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %a) nounwind, !map !7"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b) nounwind, !map !13"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %c) nounwind, !map !17"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @adder_str) nounwind"   --->   Operation 9 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %a, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [adder/adder.cpp:7]   --->   Operation 10 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %b, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [adder/adder.cpp:8]   --->   Operation 11 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %c, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [adder/adder.cpp:9]   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.65ns)   --->   "br label %1" [adder/adder.cpp:10]   --->   Operation 13 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 0.81>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %hls_label_0 ]"   --->   Operation 14 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.81ns)   --->   "%icmp_ln10 = icmp eq i7 %i_0, -64" [adder/adder.cpp:10]   --->   Operation 15 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.81> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.77ns)   --->   "%i = add i7 %i_0, 1" [adder/adder.cpp:10]   --->   Operation 17 'add' 'i' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %hls_label_0" [adder/adder.cpp:10]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.01>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%a_read = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %a) nounwind" [adder/adder.cpp:12]   --->   Operation 19 'read' 'a_read' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%b_read = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %b) nounwind" [adder/adder.cpp:12]   --->   Operation 20 'read' 'b_read' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 21 [1/1] (1.01ns)   --->   "%add_ln12 = add i32 %a_read, %b_read" [adder/adder.cpp:12]   --->   Operation 21 'add' 'add_ln12' <Predicate = (!icmp_ln10)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 22 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %c, i32 %add_ln12) nounwind" [adder/adder.cpp:12]   --->   Operation 22 'write' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3) nounwind" [adder/adder.cpp:10]   --->   Operation 23 'specregionbegin' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [adder/adder.cpp:11]   --->   Operation 24 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 25 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %c, i32 %add_ln12) nounwind" [adder/adder.cpp:12]   --->   Operation 25 'write' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp) nounwind" [adder/adder.cpp:13]   --->   Operation 26 'specregionend' 'empty_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "br label %1" [adder/adder.cpp:10]   --->   Operation 27 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 28 [1/1] (0.00ns)   --->   "ret void" [adder/adder.cpp:14]   --->   Operation 28 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3ns, clock uncertainty: 0.375ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', adder/adder.cpp:10) [13]  (0.656 ns)

 <State 2>: 0.817ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', adder/adder.cpp:10) [13]  (0 ns)
	'icmp' operation ('icmp_ln10', adder/adder.cpp:10) [14]  (0.817 ns)

 <State 3>: 1.02ns
The critical path consists of the following:
	axis read on port 'a' (adder/adder.cpp:12) [21]  (0 ns)
	'add' operation ('add_ln12', adder/adder.cpp:12) [23]  (1.02 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
